<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.mapper.ConsigneeInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.dao.model.ConsigneeInfo">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
    <result column="consignee_phone" jdbcType="VARCHAR" property="consigneePhone" />
    <result column="consignee_zip_code" jdbcType="VARCHAR" property="consigneeZipCode" />
    <result column="consignee_address" jdbcType="VARCHAR" property="consigneeAddress" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="id_delete" jdbcType="CHAR" property="idDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, consignee, consignee_phone, consignee_zip_code, consignee_address, create_time, 
    id_delete
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.dao.model.ConsigneeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from consignee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.demo.dao.model.ConsigneeInfoExample">
    delete from consignee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.dao.model.ConsigneeInfo">
    insert into consignee_info (id, consignee, consignee_phone, 
      consignee_zip_code, consignee_address, create_time, 
      id_delete)
    values (#{id,jdbcType=INTEGER}, #{consignee,jdbcType=VARCHAR}, #{consigneePhone,jdbcType=VARCHAR}, 
      #{consigneeZipCode,jdbcType=VARCHAR}, #{consigneeAddress,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{idDelete,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.dao.model.ConsigneeInfo">
    insert into consignee_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="consignee != null">
        consignee,
      </if>
      <if test="consigneePhone != null">
        consignee_phone,
      </if>
      <if test="consigneeZipCode != null">
        consignee_zip_code,
      </if>
      <if test="consigneeAddress != null">
        consignee_address,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="idDelete != null">
        id_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null">
        #{consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="consigneeZipCode != null">
        #{consigneeZipCode,jdbcType=VARCHAR},
      </if>
      <if test="consigneeAddress != null">
        #{consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="idDelete != null">
        #{idDelete,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.dao.model.ConsigneeInfoExample" resultType="java.lang.Long">
    select count(*) from consignee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update consignee_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.consignee != null">
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneePhone != null">
        consignee_phone = #{record.consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeZipCode != null">
        consignee_zip_code = #{record.consigneeZipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeAddress != null">
        consignee_address = #{record.consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.idDelete != null">
        id_delete = #{record.idDelete,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update consignee_info
    set id = #{record.id,jdbcType=INTEGER},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      consignee_phone = #{record.consigneePhone,jdbcType=VARCHAR},
      consignee_zip_code = #{record.consigneeZipCode,jdbcType=VARCHAR},
      consignee_address = #{record.consigneeAddress,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      id_delete = #{record.idDelete,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>